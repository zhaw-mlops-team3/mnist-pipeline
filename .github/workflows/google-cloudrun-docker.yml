name: Build and Deploy to GCP Cloud Run

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Artifact Registry
        run: |-
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: List current directory contents
        run: ls -alh
      - name: Build Docker image
        run: |-
          docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/mnist-pipeline/$GITHUB_REPOSITORY:$GITHUB_SHA .


      - name: Push Docker image to Artifact Registry
        run: |-
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/mnist-pipeline/$GITHUB_REPOSITORY:$GITHUB_SHA

  deploy:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}

      - name: Install gcloud beta component
        run: |
          gcloud components install beta --quiet

      - name: Create or Update Cloud Run Job
        run: |
          JOB_NAME=mnist-sweep-job
          REGION=${{ secrets.GCP_REGION }}
          IMAGE=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/mnist-pipeline/${{ github.repository }}:${{ github.sha }}

          # Try update if job exists, otherwise create
          if gcloud beta run jobs describe $JOB_NAME --region=$REGION > /dev/null 2>&1; then
            echo "Updating existing job..."
            gcloud beta run jobs update $JOB_NAME \
              --image=$IMAGE \
              --region=$REGION \
              --memory=4Gi \
              --task-timeout=100m
              --set-env-vars=WANDB_API_KEY=${{ secrets.WANDB_KEY }} \
              --quiet
          else
            echo "Creating new job..."
            gcloud beta run jobs create $JOB_NAME \
              --image=$IMAGE \
              --region=$REGION \
              --memory=4Gi \
              --task-timeout=100m
              --set-env-vars=WANDB_API_KEY=${{ secrets.WANDB_KEY }} \
              --quiet
          fi

      - name: Execute Cloud Run Job
        run: |
          gcloud beta run jobs execute mnist-sweep-job --region=${{ secrets.GCP_REGION }} --wait

